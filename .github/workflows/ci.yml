name: CI
on:
  pull_request_target:
    types: [opened, synchronize, reopened]

jobs:
  tests:
    runs-on: ubuntu-latest
    container:
      image: ruby:3.2.2
    services:
      db:
        image: postgres
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install libpq-dev for postgres
        run: apt-get -yqq install libpq-dev

      - name: Cache bundle gems
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install bundle gems
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Run tests
        env:
          RAILS_ENV: test
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY_TEST }}
          DATABASE_URL: postgres://postgres:@db
          COVERAGE: true
        run: |
          bundle exec rails db:prepare
          bundle exec rails test

  code_quality:
    runs-on: ubuntu-latest
    container:
      image: ruby:3.2
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Cache bundle gems
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install bundle gems
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Code quality - robocop
        run: |
          bundle exec rubocop --parallel

      - name: Code quality - brakeman
        run: |
          bundle exec brakeman --ignore-config config/brakeman.ignore

      # There is a bug at flog gem, so it will not run for now
      # - name: Code quality - rubycritic
      #   run: |
      #     bundle exec rubycritic --format console
